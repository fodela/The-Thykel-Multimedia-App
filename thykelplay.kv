#: import TwoLineIconListItem kivymd.uix.list.TwoLineIconListItem
ScreenManager:
    id: screenmanager
    name: 'sm'
    HomeScreen:
        id: home
        name: 'home'
    ImageScreen:
        id: image
        name: 'image'
    MusicScreen:
        id: music
        name: 'music'
    VideoScreen:
        id: video
        name: 'video'
            
<HomeScreen>:
    FloatLayout: 
        canvas.before:
            
            Rectangle:
                size: self.size
                pos: self.pos
                source: 'images/playbg.jpg'
            Color: 
                rgba: 0,0,0,0
    

        MyToolbar:
            title: 'Thykel-Play'
            left_action_items: [['menu',lambda x : x]]
        #Buttons
        MDFillRoundFlatButton:
            md_bg_color: app.color_primary
            text: "Image Viewer"
            pos_hint: {'top':.4,'center_x':.2 }
            on_release: app.view_image()
        MDFillRoundFlatButton:
            md_bg_color: app.color_primary
            text: "Music Player"
            pos_hint: {'top':.4,'center_x':.5 }
            on_release: app.play_music()
        MDFillRoundFlatButton:
            md_bg_color: app.color_primary
            text: "Video Player"
            pos_hint: {'top':.4,'center_x':.8 }
            on_release: app.play_video()

<VideoScreen>:
    FloatLayout:
        canvas.before:
            Color:
                rgb: 0,0,0
            Rectangle:
                pos: self.pos
                size: self.size
        MyToolbar:
            title: app.media_playing
            left_action_items: [['arrow-left',lambda x : app.music_go_home()]]
        Video:
            id: vid
            size_hint: .95,.9
            pos_hint: {'top':.91,'center_x':.5}
            size:1,.8
            volume: 1
            source: app.media_name
            state: 'play'
            # attr: 'VideoPlayer.allow_fullscreen'
            # allow_stretch: True
            # options: {'allow_stretch':True, }
            # image_play: 'images/play'
            # image_pause: 'images/pause'
            # image_stop:
            # image_volume_muted:
        BoxLayout:
            size_hint:1,None
            pos_hint: {'top':.25,'center_x':.5 }
            spancing: 5
            Label:
                text: app.vid_played
                color: app.color_primary
                size_hint: None,None
                padding: 0,0
            Slider:
                id: vid_seeker
                min: 0
                max: vid.duration
                color: 0,1,0,1
                value: 0
                value_track:True
                value_track_color:1,0,1,1
                hint_text_color: app.color_primary
                size_hint: .5,None
                # on_touch_up:if self.collide_point(*args[1].pos): print(vid.position,vid_seeker.value)
                # on_touch_up:if self.collide_point(*args[1].pos): vid.seek(((vid_seeker.value/vid.duration)*100),precise=True)
                on_touch_up:if self.collide_point(*args[1].pos): app.seek_video()
            Label:
                text: app.vid_left_to_play
                color: app.color_primary
                size_hint: None,None
                # pos_hint: {'top':.2,'center_x':.93}
            
        BoxLayout:
            size_hint: None,None
            pos_hint: {'top':.15,'center_x':.4 }
            spacing: 5
            MusicButton:
                icon: 'skip-backward'
            MusicButton:
                icon: 'stop'
                # on_release: app.music_stop()
            MusicButton:
                canvas:
                    Color:
                        rgb:1,1,1
                    Line:
                        width:1.5
                        circle:(self.center_x, self.center_y, min(self.width, self.height)/ 2)
                icon: app.vid_player_state_icon
                on_press:if self.collide_point(*args[0].pos): app.vid_pause_play_n_stop()
            MusicButton:
                icon: 'skip-forward'
        BoxLayout:
            size_hint:.3,None
            spacing:2
            pos_hint: {'top':.15,'center_x':.8 }
            MusicButton:
                icon: 'volume-medium'
                size_hint: None,None
            Slider:
                id: vid_vol
                min: 0
                max: 100
                value: 50
                color: app.theme_cls.accent_color
                hint_text_color: app.color_primary
                size_hint: None,None
                size: 150,20
                pos_hint: {'center_y':.5,}
                value_track: True
                value_track_color: app.color_primary
                on_touch_up: if self.collide_point(*args[1].pos): vid.volume = self.value/100
                    

<MusicScreen>:
    name: 'music'
    FloatLayout:
        canvas:
            Color:
                rgb: 0,0,0
            Rectangle:
                pos: self.pos
                size: self.size
        Label:
            text: 'Now Playing'
            pos_hint: {'top':1.3,'right':.8}
            font_size: 20
        Image:
            id: gif
            source: 'images/music.gif'
            size: 500, 500
            anim_loop:app.sound.length/3
            size_hint: .3,.3
            pos_hint: {'top':.76,'center_x':.3 }
        MDLabel:
            text: app.media_playing
            pos_hint: {'top':.9}
            font_size: 20
            color:240/255, 185/255, 240/255,1
            size_hint_x: .6
            padding: (30,0)
        Label:
            text: 'Recently Played'
            pos_hint: {'top':1.3,'center_x':.85}
            font_size: 20
        
        ScrollView:
            canvas.before:
                Color:
                    rgb: .1,.1,.1,1
                Rectangle:
                    pos: self.pos
                    size: self.size
            size_hint: None,.5
            size: 250,0
            pos_hint: {'top':.76,'center_x':.85}
            MDList:
                id: recents
                on_parent:
                    for r in app.recently_played:txt=f"r.split('/')[-1][:-4]";self.add_widget(TwoLineIconListItem(text=txt,))
                
                TwoLineIconListItem:
                    text: 'recent'
                    secondary_text: 'Scholaurenstein'
                    theme_text_color: 'Custom'
                    text_color: app.color_primary
                    secondary_theme_text_color: 'Custom'
                    secondary_text_color: app.color_white_transparent
                    IconLeftWidget:
                        icon: 'play'
                        theme_text_color: "Custom"
                        text_color: app.color_white
                
        BoxLayout:
            size_hint:1,None
            pos_hint: {'top':.2,'center_x':.5 }
            spancing: 1
            TwoLineAvatarListItem:
                size: '250dp','50dp'
                size_hint: None,None
                pos_hint: {'center_y':.5 }
                text: app.media_playing
                secondary_text: 'Scholaurenstein'
                theme_text_color: 'Custom'
                text_color: app.color_primary
                secondary_theme_text_color: 'Custom'
                secondary_text_color: app.color_white_transparent
                ImageLeftWidget:
                    source: 'images/music.jpg'
            BoxLayout:
                size_hint: None,None
                pos_hint: {'center_y':.5, }
                # pos_hint: {'top':.25,'center_x':.45 }
                size_hint:None,None
                MusicButton:
                    icon: 'skip-backward'
                # MusicButton:
                #     icon: 'stop'
                #     on_release: app.music_stop()
                MusicButton:
                    canvas:
                        Color:
                            rgb:1,1,1
                        Line:
                            width:1.5
                            circle:(self.center_x, self.center_y, min(self.width, self.height)/ 2)
                    icon: app.player_state_icon
                    on_press:if self.collide_point(*args[0].pos): app.music_pause_play_n_stop()
                MusicButton:
                    icon: 'skip-forward'
            Label:
                text: app.played
                color: app.color_primary
                size_hint: None,None
                padding: 0,0
                # pos_hint: {'center_x':.8 }
            Slider:
                id: seeker
                min: 0
                max: app.play_length
                color: 0,1,0,1
                value: 0
                value_track:True
                value_track_color:1,0,1,1
                hint_text_color: app.color_primary
                size_hint: .5,None
                on_touch_up:if self.collide_point(*args[1].pos):  app.sound.seek(self.value)        
            Label:
                text: app.left_to_play
                color: app.color_primary
                size_hint: None,None
                # pos_hint: {'top':.2,'center_x':.93}
            MusicButton:
                icon: 'volume-high'
                size_hint: None,None
            Slider:
                id: vol
                min: 0
                max: 100
                value: 50
                color: app.theme_cls.accent_color
                hint_text_color: app.color_primary
                size_hint: .2,.1
                # pos_hint: {'center_y':.5,'center_x':.9}
                on_touch_up: if self.collide_point(*args[1].pos): app.sound.volume = self.value/100
                value_track: True
                value_track_color: app.color_primary
                pos_hint: {'center_y':.5, }
        MyToolbar:
            title: app.media_playing
            left_action_items: [['arrow-left',lambda x : app.music_go_home()]]
        
    

<ImageScreen>:
    name: 'picture'
    FloatLayout:
        canvas:
            Color:
                rgb: 0,0,0
            Rectangle:
                pos: self.pos
                size: self.size
        MyToolbar:
            title: app.media_playing
            anchor: 'center'
            left_action_items: [['arrow-left', lambda x : app.change_screen('home')]]
     
        AsyncImage:
            pos_hint: {'center_x': .5,'center_y':.5}
            size: self.texture_size
            size_hint: .85,.85
            source: app.media_name
        
            
        MusicButton:
            icon: 'less-than'
            pos_hint: {'left':.95,'center_y':.5 }

        MusicButton:
            icon: 'greater-than'
            pos_hint: {'right':1, 'center_y':.5}
            on_release: app.next_img()

<MyToolbar@MDToolbar>:
    title: ''
    md_bg_color: 0,0,0,1
    specific_text_color: app.color_primary
    pos_hint: {'top':1}
    user_font_size: '40sp'

<MusicButton@MDIconButton>:
    theme_text_color: "Custom"
    text_color: app.color_primary
    pos_hint: {'center_y':.5 }




